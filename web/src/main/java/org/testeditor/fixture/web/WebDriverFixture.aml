package org.testeditor.fixture.web

interaction type wait {
	label = "Wait seconds"
	template = "Wait" ${seconds} "seconds"
	method = WebDriverFixture.waitSeconds(seconds)
}

interaction type startBrowser {
	label = "Start browser"
	template = "start browser" ${element} 
	method = WebDriverFixture.startBrowser(element)
}

interaction type startFireForxPortable {
	label = "Start browser firefox protable"
	template = "start firefox protable" ${path} 
	method = WebDriverFixture.startFireFoxPortable(path)
}

interaction type goToUrl {
	label = "Browse to url"
	template = "Browse to" ${url}
	method = WebDriverFixture.gotToUrl(url)
}

interaction type closeBrowser {
	label = "Close browser"
	template = "Close browser"
	method = WebDriverFixture.closeBrowser
}

interaction type setActiveBrwoser {
	template = "Set active browser" ${browser}
	method = WebDriverFixture.setDriver(browser)
}

interaction type typeIn {
	label = "Type in"
	template = "Type in" ${element} "value" ${value}
	method = WebDriverFixture.typeInto(element, value)
}

interaction type sendEnter {
	label = "press enter in"
	template = "press enter in" ${element}
	method = WebDriverFixture.pressEnterOn(element)
}

interaction type clear {
	label = "Clear field"
	template = "Clear value in" ${element}
	method = WebDriverFixture.clear(element)
}

interaction type click {
	label = "Click"
	template = "click on" ${element}
	method = WebDriverFixture.clickOn(element)	
}
interaction type moveToElementAndClick {
	label = "moveToElementAndClick"
	template = "move to" ${element} "and click"
	method = WebDriverFixture.moveToElementAndClick(element)	
}



interaction type selectInSelection {
	template = "select " ${value} "in" ${element}
	method = WebDriverFixture.selectElementInSelection(element,value)	
}

interaction type getAvailableOptions {
	template = "available Options in" ${element}
	method = WebDriverFixture.getOptionsInSelection(element)	
}

interaction type readValue {
	label = "Read value"
	template = "read value from" ${element}
	method = WebDriverFixture.readValue(element)	
}

interaction type executeScript {
	label = "Execute Script"
	template = "Execute script" ${value}
	method = WebDriverFixture.setExecuteScript(value)	
}


interaction type checkEnabled {
	label = "check enabled"
	template = "check if element " ${element} " is enabled"
	method = WebDriverFixture.checkEnabled(element)	
}


element type BrowserApplication {
	interactions = startBrowser, startFireForxPortable, executeScript
}

element type field {
	interactions = typeIn, sendEnter
}

element type button {
	interactions = click, sendEnter, moveToElementAndClick, checkEnabled
}

element type selection {
	interactions = click, sendEnter, selectInSelection, getAvailableOptions
}

element type labelElement {
	interactions = readValue
}

component type GeneralBrowser {
	interactions = wait, goToUrl, closeBrowser, setActiveBrwoser
}

component type Page {
	interactions = wait
}

component WebBrowser is GeneralBrowser {
	element defaultBrowser is BrowserApplication {
		label = "default"
		locator ="default"
	}
	element OlderFirefox is BrowserApplication {
		label = "Firefox(older)"
		locator ="firefox"
	}
	element Firefox is BrowserApplication {
		label = "Firefox(47 and above)"
		locator ="modernfirefox"
	}
	element IE is BrowserApplication {
		label = "Internet Explorer"
		locator ="ie"
	}
	element Chrome is BrowserApplication {
		label = "Chrome"
		locator ="chrome"
	}
}
